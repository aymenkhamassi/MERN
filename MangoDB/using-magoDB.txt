
***************************//Create a database called 'my_first_db'.****************************************************

test> use my-first-db
switched to db my-first-db

//*************************Create students collection.******************************************************************

my-first-db> db.createCollection("students")
{ ok: 1 }

****************************Create 5 students with the appropriate info.*************************************************

my-first-db> db.students.insert({name: sophie, home_state: france, lucky_number: 7, birthday: {month: 12, day: 1, year: 2000}})
ReferenceError: sophie is not defined
my-first-db> db.students.insert({name: "sophie", home_state: "france", lucky_number: 7, birthday: {month: 12, day: 1, year: 2000}})
DeprecationWarning: Collection.insert() is deprecated. Use insertOne, insertMany, or bulkWrite.
{
  acknowledged: true,
  insertedIds: { '0': ObjectId("64a5bb33b2a2894f001eff81") }
}
my-first-db> db.students.insertOne({name: "christophe", home_state: "belgique", lucky_number: 17, birthday: {month: 10, day: 12, year: 2002}})
{
  acknowledged: true,
  insertedId: ObjectId("64a5bb83b2a2894f001eff82")
}
my-first-db> db.students.insertOne({name: "joseph", home_state: "belgique", lucky_number: 17, birthday: {month: 11, day: 20, year: 2002}})
{
  acknowledged: true,
  insertedId: ObjectId("64a5bbadb2a2894f001eff83")
}
my-first-db> db.students.insertOne({name: "robert", home_state: "tunis", lucky_number: 170, birthday: {month: 5, day: 20, year: 2005}})
{
  acknowledged: true,
  insertedId: ObjectId("64a5bbd2b2a2894f001eff84")
}
my-first-db> db.students.insertOne({name: "michelle", home_state: "tunis", lucky_number: 570, birthday: {month: 7, day: 20, year: 2015}})
{
  acknowledged: true,
  insertedId: ObjectId("64a5bbf1b2a2894f001eff85")
}

my-first-db> show collections
students

**************************************Get all students.******************************************

my-first-db> db.students.find()
[
  {
    _id: ObjectId("64a5bb33b2a2894f001eff81"),
    name: 'sophie',
    home_state: 'france',
    lucky_number: 7,
    birthday: { month: 12, day: 1, year: 2000 }
  },
  {
    _id: ObjectId("64a5bb83b2a2894f001eff82"),
    name: 'christophe',
    home_state: 'belgique',
    lucky_number: 17,
    birthday: { month: 10, day: 12, year: 2002 }
  },
  {
    _id: ObjectId("64a5bbadb2a2894f001eff83"),
    name: 'joseph',
    home_state: 'belgique',
    lucky_number: 17,
    birthday: { month: 11, day: 20, year: 2002 }
  },
  {
    _id: ObjectId("64a5bbd2b2a2894f001eff84"),
    name: 'robert',
    home_state: 'tunis',
    lucky_number: 170,
    birthday: { month: 5, day: 20, year: 2005 }
  },
  {
    _id: ObjectId("64a5bbf1b2a2894f001eff85"),
    name: 'michelle',
    home_state: 'tunis',
    lucky_number: 570,
    birthday: { month: 7, day: 20, year: 2015 }
  }
]

****************************************************************************************************

my-first-db> db.students.find({home_state : "belgique"})
[
  {
    _id: ObjectId("64a5bb83b2a2894f001eff82"),
    name: 'christophe',
    home_state: 'belgique',
    lucky_number: 17,
    birthday: { month: 10, day: 12, year: 2002 }
  },
  {
    _id: ObjectId("64a5bbadb2a2894f001eff83"),
    name: 'joseph',
    home_state: 'belgique',
    lucky_number: 17,
    birthday: { month: 11, day: 20, year: 2002 }
  }
]

*****************************************************************************************************

my-first-db> db.students.find({home_state:{$in:["tunis","belgique"]}})
[
  {
    _id: ObjectId("64a5bb83b2a2894f001eff82"),
    name: 'christophe',
    home_state: 'belgique',
    lucky_number: 17,
    birthday: { month: 10, day: 12, year: 2002 }
  },
  {
    _id: ObjectId("64a5bbadb2a2894f001eff83"),
    name: 'joseph',
    home_state: 'belgique',
    lucky_number: 17,
    birthday: { month: 11, day: 20, year: 2002 }
  },
  {
    _id: ObjectId("64a5bbd2b2a2894f001eff84"),
    name: 'robert',
    home_state: 'tunis',
    lucky_number: 170,
    birthday: { month: 5, day: 20, year: 2005 }
  },
  {
    _id: ObjectId("64a5bbf1b2a2894f001eff85"),
    name: 'michelle',
    home_state: 'tunis',
    lucky_number: 570,
    birthday: { month: 7, day: 20, year: 2015 }
  }
]
********************************************************************************************************

my-first-db> db.students.find({lucky_number : {$gt:3}})
[
  {
    _id: ObjectId("64a5bb33b2a2894f001eff81"),
    name: 'sophie',
    home_state: 'france',
    lucky_number: 7,
    birthday: { month: 12, day: 1, year: 2000 }
  },
  {
    _id: ObjectId("64a5bb83b2a2894f001eff82"),
    name: 'christophe',
    home_state: 'belgique',
    lucky_number: 17,
    birthday: { month: 10, day: 12, year: 2002 }
  },
  {
    _id: ObjectId("64a5bbadb2a2894f001eff83"),
    name: 'joseph',
    home_state: 'belgique',
    lucky_number: 17,
    birthday: { month: 11, day: 20, year: 2002 }
  },
  {
    _id: ObjectId("64a5bbd2b2a2894f001eff84"),
    name: 'robert',
    home_state: 'tunis',
    lucky_number: 170,
    birthday: { month: 5, day: 20, year: 2005 }
  },
  {
    _id: ObjectId("64a5bbf1b2a2894f001eff85"),
    name: 'michelle',
    home_state: 'tunis',
    lucky_number: 570,
    birthday: { month: 7, day: 20, year: 2015 }
  }
]
******************************************************************************************************

my-first-db> db.students.find({lucky_number:{$lte:10}})
[
  {
    _id: ObjectId("64a5bb33b2a2894f001eff81"),
    name: 'sophie',
    home_state: 'france',
    lucky_number: 7,
    birthday: { month: 12, day: 1, year: 2000 }
  }
]
*******************************************************************************************************

my-first-db> db.students.find({lucky_number:{$gte:1,$lte:9}})
[
  {
    _id: ObjectId("64a5bb33b2a2894f001eff81"),
    name: 'sophie',
    home_state: 'france',
    lucky_number: 7,
    birthday: { month: 12, day: 1, year: 2000 }
  }
]
*******************************************************************************************************

my-first-db> db.students.updateMany({},{$set:{interests:['coding', 'brunch', 'MongoDB']}})
{
  acknowledged: true,
  insertedId: null,
  matchedCount: 5,
  modifiedCount: 5,
  upsertedCount: 0
}
*******************************************************************************************************

my-first-db> db.students.update({name:"sophie"},{$push: {interests: 'snowboarding'}})
DeprecationWarning: Collection.update() is deprecated. Use updateOne, updateMany, or bulkWrite.
{
  acknowledged: true,
  insertedId: null,
  matchedCount: 1,
  modifiedCount: 1,
  upsertedCount: 0
}
*******************************************************************************************************

my-first-db> db.students.update({name:"robert"},{$push: {interests: 'chess'}})
{
  acknowledged: true,
  insertedId: null,
  matchedCount: 1,
  modifiedCount: 1,
  upsertedCount: 0
}

********************************************************************************************************
my-first-db> db.students.update({name:"michelle"},{$push: {interests: 'dancing'}})
{
  acknowledged: true,
  insertedId: null,
  matchedCount: 1,
  modifiedCount: 1,
  upsertedCount: 0
}
*******************************************************************************************************
my-first-db> db.students.updateMany({name:"robert"},{$push: {interests: 'taxes'}})
{
  acknowledged: true,
  insertedId: null,
  matchedCount: 1,
  modifiedCount: 1,
  upsertedCount: 0
}
******************************************************************************************************
my-first-db> db.students.updateMany({name:"robert"},{$pull: {interests: 'taxes'}})
{
  acknowledged: true,
  insertedId: null,
  matchedCount: 1,
  modifiedCount: 1,
  upsertedCount: 0
}

******************************************************************************************************
my-first-db> db.students.remove({home_state:"france"})
DeprecationWarning: Collection.remove() is deprecated. Use deleteOne, deleteMany, findOneAndDelete, or bulkWrite.
{ acknowledged: true, deletedCount: 1 }

******************************************************************************************************
my-first-db> db.students.deleteOne({name:"robert"})
{ acknowledged: true, deletedCount: 1 }

******************************************************************************************************


my-first-db> db.students.deleteOne({lucky_number:{$gt:5}})
{ acknowledged: true, deletedCount: 1 }

******************************************************************************************************
my-first-db> db.students.updateMany({},{$set:{number_of_belts: 0}})
{
  acknowledged: true,
  insertedId: null,
  matchedCount: 2,
  modifiedCount: 2,
  upsertedCount: 0
}

******************************************************************************************************
my-first-db> db.students.updateMany({home_state:"michelle"},{$inc:{number_of_belts: 1}})
{
  acknowledged: true,
  insertedId: null,
  matchedCount: 0,
  modifiedCount: 0,
  upsertedCount: 0
}

*****************************************************************************************************
my-first-db> db.students.updateMany({},{$rename:{"number_of_belts":"belts_earned"}})
{
  acknowledged: true,
  insertedId: null,
  matchedCount: 2,
  modifiedCount: 2,
  upsertedCount: 0
}

*****************************************************************************************************
my-first-db> db.students.updateMany({},{$unset:{lucky_number:""}})
{
  acknowledged: true,
  insertedId: null,
  matchedCount: 2,
  modifiedCount: 2,
  upsertedCount: 0
}

*****************************************************************************************************
my-first-db> db.students.updateMany({},{$currentDate: {lastModified: true,"updated_at": { $type: "timestamp" } }})
{
  acknowledged: true,
  insertedId: null,
  matchedCount: 2,
  modifiedCount: 2,
  upsertedCount: 0
}

*****************************************************************************************************
my-first-db> db.students.find()
[
  {
    _id: ObjectId("64a5bbadb2a2894f001eff83"),
    name: 'joseph',
    home_state: 'belgique',
    birthday: { month: 11, day: 20, year: 2002 },
    interests: [ 'coding', 'brunch', 'MongoDB' ],
    belts_earned: 0,
    lastModified: ISODate("2023-07-05T20:01:51.874Z"),
    updated_at: Timestamp({ t: 1688587311, i: 1 })
  },
  {
    _id: ObjectId("64a5bbf1b2a2894f001eff85"),
    name: 'michelle',
    home_state: 'tunis',
    birthday: { month: 7, day: 20, year: 2015 },
    interests: [ 'coding', 'brunch', 'MongoDB', 'dancing' ],
    belts_earned: 0,
    lastModified: ISODate("2023-07-05T20:01:51.874Z"),
    updated_at: Timestamp({ t: 1688587311, i: 2 })
  }
]
my-first-db>